---
# Use the datagen connector to produce messages on example-topic-staging
apiVersion: platform.confluent.io/v1beta1
kind: Connector
metadata:
  name: datagen-users
  namespace: confluent
  labels:
    target-namespace: confluent
spec:
  class: "io.confluent.kafka.connect.datagen.DatagenConnector"
  taskMax: 1
  connectClusterRef:
    name: connect
  configs:
    kafka.topic: "example-topic-staging"
    quickstart: "users"
    key.converter: "org.apache.kafka.connect.storage.StringConverter"
    value.converter: "org.apache.kafka.connect.json.JsonConverter"
    value.converter.schemas.enable: "false"
    max.interval: "3000"
    iterations: "100000"
---
apiVersion: platform.confluent.io/v1beta1
kind: Connector
metadata:
  name: s3-sink-example
  namespace: confluent
  labels:
    target-namespace: confluent
spec:
  class: "io.confluent.connect.s3.S3SinkConnector"
  taskMax: 1
  connectClusterRef:
    name: connect
  configs:
    topics: "example-topic-staging"
    storage.class: "io.confluent.connect.s3.storage.S3Storage"
    format.class: "io.confluent.connect.s3.format.json.JsonFormat"
    flush.size: "20"
    s3.bucket.name: "confluent-sink"
    s3.region: "us-east-1"
    schema.enabled: "false"
    key.converter: "org.apache.kafka.connect.storage.StringConverter"
    key.converter.schemas.enable: "false"
    value.converter: "org.apache.kafka.connect.json.JsonConverter"
    value.converter.schemas.enable: "false"
    schema.compatibility: "NONE"
    # perform a Single Message Transform
    transforms: "femalesOnly,replaceField,tsConverter"
    # filter including only dump records for females to s3
    # Note: this requires confluent transforms installed from hub
    transforms.femalesOnly.type: "io.confluent.connect.transforms.Filter$Value"
    transforms.femalesOnly.filter.type: "include"
    transforms.femalesOnly.filter.condition: "$[?(@.gender == 'FEMALE')]"
    # remove userid and rename regionid
    transforms.replaceField.type: "org.apache.kafka.connect.transforms.ReplaceField$Value"
    transforms.replaceField.exclude: "userid"
    transforms.replaceField.renames: "regionid:Region_Id"
    # convert registertime ts to datetime string
    transforms.tsConverter.type: "org.apache.kafka.connect.transforms.TimestampConverter$Value"
    transforms.tsConverter.field: "registertime"
    transforms.tsConverter.format: "yyyy-MM-dd.mm.hh.ss"
    transforms.tsConverter.target.type: "string"
